#!/bin/sh
#

# chkconfig: 345 80 20
# description: Start and stops CollabNet Subversion server.

APP_NAME="csvn-httpd"
APP_LONG_NAME="Subversion Edge Apache Server"
RETVAL=0

OS_NAME=`uname -s`
case "$OS_NAME" in
    linux*|Linux*)
    ECHO_CMD="echo -n"
    MOVE_TO_COL="echo -en \\033[60G"
    SETCOLOR_SUCCESS="echo -en \\033[0;32m"
    SETCOLOR_FAILURE="echo -en \\033[0;31m"
    SETCOLOR_NORMAL="echo -en \\033[0;39m"
    ;;
    SunOS)
    ECHO_CMD="echo"
    MOVE_TO_COL=""
    SETCOLOR_SUCCESS=""
    SETCOLOR_FAILURE=""
    SETCOLOR_NORMAL=""
    ;;
esac


# Get the fully qualified path to the script
case $0 in
    /*)
        SCRIPT="$0"
        ;;
    *)
        PWD=`pwd`
        SCRIPT="$PWD/$0"
        ;;
esac


# Resolve the true real path without any sym links.
CHANGED=true
while [ "X$CHANGED" != "X" ]
do
    # Change spaces to ":" so the tokens can be parsed.
    SAFESCRIPT=`echo $SCRIPT | sed -e 's; ;:;g'`
    # Get the real path to this script, resolving any symbolic links
    TOKENS=`echo $SAFESCRIPT | sed -e 's;/; ;g'`
    REALPATH=
    for C in $TOKENS; do
        # Change any ":" in the token back to a space.
        C=`echo $C | sed -e 's;:; ;g'`
        REALPATH="$REALPATH/$C"
        # If REALPATH is a sym link, resolve it.  Loop for nested links.
        while [ -h "$REALPATH" ] ; do
            LS="`ls -ld "$REALPATH"`"
            LINK="`expr "$LS" : '.*-> \(.*\)$'`"
            if expr "$LINK" : '/.*' > /dev/null; then
                # LINK is absolute.
                REALPATH="$LINK"
            else
                # LINK is relative.
                REALPATH="`dirname "$REALPATH"`""/$LINK"
            fi
        done
    done

    if [ "$REALPATH" = "$SCRIPT" ]
    then
        CHANGED=""
    else
        SCRIPT="$REALPATH"
    fi
done

# Change the current directory to the location of the script
cd "`dirname "$REALPATH"`"
REALDIR=`pwd`

# Source function library.
if [ -x /etc/init.d/functions ] ; then
  . /etc/init.d/functions
elif [ -f /etc/rc.status ] ; then
  . /etc/rc.status
fi

# Resolve the location of the 'id' command
IDEXE="/usr/xpg4/bin/id"
if [ ! -x "$IDEXE" ]  ; then
  IDEXE="/usr/bin/id"
  if [ ! -x "$IDEXE" ] ; then
    echo "Unable to locate 'id'."
    echo "Please report this message along with the location of the command on your system."
    exit 1
  fi
fi

DATADIR=$REALDIR/../data
LIBDIR=$REALDIR/../lib
CONFDIR=$REALDIR/../data/conf
CSVNCONF="$CONFDIR/csvn.conf"
MODPYTHONLIBDIR=$REALDIR/../lib/
PYTHONPATH=$MODPYTHONLIBDIR
export PYTHONPATH

if [ -f "$CSVNCONF" ]; then
  . $CSVNCONF
  # earlier versions of csvn.conf sets these for csvn script
  APP_NAME="csvn-httpd"
  APP_LONG_NAME="Subversion Edge Apache Server"
fi

showresult()
{
  if [ -x /etc/init.d/functions ] ; then
    [ "$1" -eq 0 ] && success || failure
  elif [ -f /etc/rc.status ] ; then
    rc_status -v
  else
    $MOVE_TO_COL
    if [ "$1" -eq 0 ] ; then
      $SETCOLOR_SUCCESS
      $ECHO_CMD "  OK  "
    else
      $SETCOLOR_FAILURE 
      $ECHO_CMD "FAILED"
    fi
    $SETCOLOR_NORMAL 
    #$ECHO_CMD "\r"
  fi
}

csvn_start()
{
  $ECHO_CMD "Starting $APP_LONG_NAME: "

  PID_FILE="$DATADIR/run/httpd.pid"

  if [ -f "$PID_FILE" ] ; then
    read pid < "$PID_FILE"
  fi

  if [ -n "$pid" -a -d "/proc/$pid" ] ; then
    $ECHO_CMD
    $ECHO_CMD "$APP_LONG_NAME is already running."
    RETVAL=0
    showresult $RETVAL
    unset pid
    return $RETVAL
  fi

  # Is httpd_bind enabled?
  BINDEXE="`find $LIBDIR/httpd_bind/httpd_bind -user root -perm -4000`"
  if [ "X$BINDEXE" = "X$LIBDIR/httpd_bind/httpd_bind" ] ; then
    LD_PRELOAD=$LIBDIR/httpd_bind/libhttpd_bind.so.1
    export LD_PRELOAD
    PATH=$LIBDIR/httpd_bind:$PATH
    export PATH

    if [ `$IDEXE -u` -eq 0 ] ; then
      if [ "X$RUN_AS_USER" != "X" ] ; then
        if [ -f "/sbin/runuser" ] ; then
          /sbin/runuser - $RUN_AS_USER -c "LD_PRELOAD=$LD_PRELOAD \
                                           PATH=$PATH \
                                           $REALDIR/httpd -f $CONFDIR/httpd.conf -k start"
        else
          su - $RUN_AS_USER -c "LD_PRELOAD=$LD_PRELOAD \
                                PATH=$PATH \
                                $REALDIR/httpd -f $CONFDIR/httpd.conf -k start"
        fi
      else
        echo "RUN_AS_USER is not yet set. Please set the RUN_AS_USER in csvn.conf"
        exit 1
      fi
    else
      $REALDIR/httpd -f $CONFDIR/httpd.conf -k start
    fi
  else
    # Not using httpd_bind
    $REALDIR/httpd -f $CONFDIR/httpd.conf -k start
  fi
  RETVAL=$?

  unset pid
  showresult $RETVAL
  return $RETVAL
}

graceful()
{
  $ECHO_CMD "Starting $APP_LONG_NAME: "
  $REALDIR/httpd -f $CONFDIR/httpd.conf -k graceful
  RETVAL=$?
  showresult $RETVAL
  return $RETVAL
}

csvn_stop()
{
  $ECHO_CMD "Stopping $APP_LONG_NAME: "

  PID_FILE="$DATADIR/run/httpd.pid"

  $REALDIR/httpd -f $CONFDIR/httpd.conf -k stop
  RETVAL=$?

  sleep 1
  if [ $RETVAL -eq 0 ]; then
    if [ -f "$PID_FILE" ]; then
      rm $PID_FILE
    fi
  fi

  unset pid
  showresult $RETVAL
  return $RETVAL
}

status ()
{
  PID_FILE="$DATADIR/run/httpd.pid"

  if [ -f $PID_FILE ]; then
    read PID < $PID_FILE
    ps -p $PID > /dev/null
    RETVAL=$?

    if [ $RETVAL -eq 0 ]; then
      $ECHO_CMD "$APP_LONG_NAME ([$PID]) Running ..."
    else
      $ECHO_CMD "$APP_LONG_NAME Not Running, but pid file exists"
      RETVAL=1
    fi
  else
    $ECHO_CMD "$APP_LONG_NAME Not Running ..."
    RETVAL=1
  fi

  unset PID
  showresult $RETVAL
  return $RETVAL
}

csvn_restart()
{
  csvn_stop stop
  echo
  csvn_start start
  return $RETVAL
}

# Resolve the os
DIST_OS=`uname -s | tr [A-Z] [a-z] | tr -d ' '`
case "$DIST_OS" in
    'sunos')
        DIST_OS="solaris"
        ;;
    'hp-ux' | 'hp-ux64')
        # HP-UX needs the XPG4 version of ps (for -o args)
        DIST_OS="hpux"
        UNIX95=""
        export UNIX95   
        ;;
    'darwin')
        DIST_OS="macosx"
        ;;
    'unix_sv')
        DIST_OS="unixware"
        ;;
    'os/390')
        DIST_OS="zos"
        ;;
esac

installdaemon() {
    if [ `id | sed 's/^uid=//;s/(.*$//'` != "0" ] ; then
        echo "Must be root to perform this action."
        exit 1
    else
        if [ "$DIST_OS" = "solaris" ] ; then
            echo "Detected Solaris:"
            if [ -f /etc/init.d/$APP_NAME ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                ln -s $REALPATH /etc/init.d/$APP_NAME
                ln -s /etc/init.d/$APP_NAME /etc/rc3.d/K20$APP_NAME
                ln -s /etc/init.d/$APP_NAME /etc/rc3.d/S20$APP_NAME
            fi
        elif [ "$DIST_OS" = "linux" ] ; then
            if [ -f /etc/redhat-release -o -f /etc/redhat_version -o -f /etc/fedora-release ]  ; then
                echo "Detected RHEL or Fedora:"                     
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " The $APP_LONG_NAME daemon is already installed."
                    exit 1
                else
                    echo " Installing the $APP_LONG_NAME daemon.."
                    ln -s $REALPATH /etc/init.d/$APP_NAME
                    /sbin/chkconfig --add $APP_NAME
                    /sbin/chkconfig $APP_NAME on
                fi
            elif [ -f /etc/SuSE-release ] ; then
                echo "Detected SuSE or SLES:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " The $APP_LONG_NAME daemon is already installed."
                    exit 1
                else
                    echo " Installing the $APP_LONG_NAME daemon.."
                    ln -s $REALPATH /etc/init.d/$APP_NAME
                    insserv /etc/init.d/$APP_NAME
                fi
            elif [ -f /etc/lsb-release ] ; then
                echo "Detected Ubuntu:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " The $APP_LONG_NAME daemon is already installed."
                    exit 1
                else
                    echo " Installing the $APP_LONG_NAME daemon.."
                    ln -s $REALPATH /etc/init.d/$APP_NAME
                    update-rc.d $APP_NAME defaults
                fi
            else
                echo "Detected Linux:"                    
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " The $APP_LONG_NAME daemon is already installed."
                    exit 1
                else
                    echo " Installing the $APP_LONG_NAME daemon.."
                    ln -s $REALPATH /etc/init.d/$APP_NAME
                    ln -s /etc/init.d/$APP_NAME /etc/rc3.d/K20$APP_NAME
                    ln -s /etc/init.d/$APP_NAME /etc/rc3.d/S20$APP_NAME
                    ln -s /etc/init.d/$APP_NAME /etc/rc5.d/S20$APP_NAME
                    ln -s /etc/init.d/$APP_NAME /etc/rc5.d/K20$APP_NAME
                fi
            fi
        elif [ "$DIST_OS" = "hpux" ] ; then
            echo "Detected HP-UX:"                 
            if [ -f /sbin/init.d/$APP_NAME ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                ln -s $REALPATH /sbin/init.d/$APP_NAME
                ln -s /sbin/init.d/$APP_NAME /sbin/rc3.d/K20$APP_NAME
                ln -s /sbin/init.d/$APP_NAME /sbin/rc3.d/S20$APP_NAME
            fi
        elif [ "$DIST_OS" = "aix" ] ; then
            echo "Detected AIX:"
            if [ -f /etc/rc.d/init.d/$APP_NAME ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                ln -s $REALPATH /etc/rc.d/init.d/$APP_NAME
                ln -s /etc/rc.d/init.d/$APP_NAME /etc/rc.d/rc2.d/S20$APP_NAME
                ln -s /etc/rc.d/init.d/$APP_NAME /etc/rc.d/rc2.d/K20$APP_NAME
            fi
        elif [ "$DIST_OS" = "freebsd" ] ; then
            echo "Detected FreeBSD:"                 
            if [ -f /etc/rc.d/$APP_NAME ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                sed -i .bak "/${APP_NAME}_enable=\"YES\"/d" /etc/rc.conf
                if [ -f ${REALDIR}/${APP_NAME}.install ] ; then
                    ln -s ${REALDIR}/${APP_NAME}.install /etc/rc.d/$APP_NAME
                else
                    echo '#!/bin/sh' > /etc/rc.d/$APP_NAME
                    echo "#" >> /etc/rc.d/$APP_NAME
                    echo "# PROVIDE: $APP_NAME" >> /etc/rc.d/$APP_NAME
                    echo "# REQUIRE: NETWORKING" >> /etc/rc.d/$APP_NAME
                    echo "# KEYWORD: shutdown" >> /etc/rc.d/$APP_NAME
                    echo ". /etc/rc.subr" >> /etc/rc.d/$APP_NAME
                    echo "name=\"$APP_NAME\"" >> /etc/rc.d/$APP_NAME
                    echo "rcvar=\`set_rcvar\`" >> /etc/rc.d/$APP_NAME
                    echo "command=\"${REALDIR}/${APP_NAME}\"" >> /etc/rc.d/$APP_NAME
                    echo 'start_cmd="${name}_start"' >> /etc/rc.d/$APP_NAME
                    echo 'load_rc_config $name' >> /etc/rc.d/$APP_NAME
                    echo 'status_cmd="${name}_status"' >> /etc/rc.d/$APP_NAME
                    echo 'stop_cmd="${name}_stop"' >> /etc/rc.d/$APP_NAME
                    echo "${APP_NAME}_status() {" >> /etc/rc.d/$APP_NAME
                    echo '${command} status' >> /etc/rc.d/$APP_NAME
                    echo '}' >> /etc/rc.d/$APP_NAME
                    echo "${APP_NAME}_stop() {" >> /etc/rc.d/$APP_NAME
                    echo '${command} stop' >> /etc/rc.d/$APP_NAME
                    echo '}' >> /etc/rc.d/$APP_NAME
                    echo "${APP_NAME}_start() {" >> /etc/rc.d/$APP_NAME
                    echo '${command} start' >> /etc/rc.d/$APP_NAME
                    echo '}' >> /etc/rc.d/$APP_NAME
                    echo 'run_rc_command "$1"' >> /etc/rc.d/$APP_NAME
                fi
                echo "${APP_NAME}_enable=\"YES\"" >> /etc/rc.conf
                chmod 555 /etc/rc.d/$APP_NAME
            fi

        elif [ "$DIST_OS" = "macosx" ] ; then
            echo "Detected Mac OSX:"
            if [ -f /Library/LaunchDaemons/${APP_PLIST} ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                if [ -f ${REALDIR}/${APP_PLIST} ] ; then
                    ln -s ${REALDIR}/${APP_PLIST} /Library/LaunchDaemons/${APP_PLIST}
                else
                    echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" > /Library/LaunchDaemons/${APP_PLIST}
                    echo "<!DOCTYPE plist PUBLIC \"-//Apple Computer//DTD PLIST 1.0//EN\"" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "<plist version=\"1.0\">" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "    <dict>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <key>Label</key>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <string>${APP_PLIST_BASE}</string>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <key>ProgramArguments</key>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <array>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "            <string>${REALDIR}/${APP_NAME}</string>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "            <string>launchdinternal</string>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        </array>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <key>OnDemand</key>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <true/>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <key>RunAtLoad</key>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "        <true/>" >> /Library/LaunchDaemons/${APP_PLIST}
                    if [ "X$RUN_AS_USER" != "X" ] ; then
                        echo "        <key>UserName</key>" >> /Library/LaunchDaemons/${APP_PLIST}
                        echo "        <string>${RUN_AS_USER}</string>" >> /Library/LaunchDaemons/${APP_PLIST}
                    fi
                    echo "    </dict>" >> /Library/LaunchDaemons/${APP_PLIST}
                    echo "</plist>" >> /Library/LaunchDaemons/${APP_PLIST}
                fi
                chmod 555 /Library/LaunchDaemons/${APP_PLIST}
            fi
        elif [ "$DIST_OS" = "zos" ] ; then
            echo "Detected z/OS:"
            if [ -f /etc/rc.bak ] ; then
                echo " The $APP_LONG_NAME daemon is already installed."
                exit 1
            else
                echo " Installing the $APP_LONG_NAME daemon.."
                cp /etc/rc /etc/rc.bak
                sed  "s:echo /etc/rc script executed, \`date\`::g" /etc/rc.bak > /etc/rc
                echo "_BPX_JOBNAME='${APP_NAME}' ${REALDIR}/${APP_NAME} start" >>/etc/rc
                echo '/etc/rc script executed, `date`' >>/etc/rc
            fi
        else
            echo "Install not currently supported for $DIST_OS"
            exit 1
        fi
    fi
}

removedaemon() {
    if [ `id | sed 's/^uid=//;s/(.*$//'` != "0" ] ; then
        echo "Must be root to perform this action."
        exit 1
    else
        csvn_stop
        if [ "$DIST_OS" = "solaris" ] ; then
            echo "Detected Solaris:"
            if [ -f /etc/init.d/$APP_NAME ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                for i in /etc/rc3.d/S20$APP_NAME /etc/rc3.d/K20$APP_NAME /etc/init.d/$APP_NAME
                do
                    rm -f $i
                done
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        elif [ "$DIST_OS" = "linux" ] ; then
            if [ -f /etc/redhat-release -o -f /etc/redhat_version -o -f /etc/fedora-release ] ; then
                echo "Detected RHEL or Fedora:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " Removing $APP_LONG_NAME daemon..."
                    /sbin/chkconfig $APP_NAME off
                    /sbin/chkconfig --del $APP_NAME
                    rm -f /etc/init.d/$APP_NAME
                else
                    echo " The $APP_LONG_NAME daemon is not currently installed."
                    exit 1
                fi
            elif [ -f /etc/SuSE-release ] ; then
                echo "Detected SuSE or SLES:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " Removing $APP_LONG_NAME daemon..."
                    insserv -r /etc/init.d/$APP_NAME
                    rm -f /etc/init.d/$APP_NAME
                else
                    echo " The $APP_LONG_NAME daemon is not currently installed."
                    exit 1
                fi
            elif [ -f /etc/lsb-release ] ; then
                echo "Detected Ubuntu:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " Removing $APP_LONG_NAME daemon..."
                    update-rc.d -f $APP_NAME remove
                    rm -f /etc/init.d/$APP_NAME
                else
                    echo " The $APP_LONG_NAME daemon is not currently installed."
                    exit 1
                fi
            else
                echo "Detected Linux:"
                if [ -f /etc/init.d/$APP_NAME ] ; then
                    echo " Removing $APP_LONG_NAME daemon..."
                    for i in /etc/rc3.d/K20$APP_NAME /etc/rc5.d/K20$APP_NAME /etc/rc3.d/S20$APP_NAME /etc/init.d/$APP_NAME /etc/rc5.d/S20$APP_NAME
                    do
                        rm -f $i
                    done
                else
                    echo " The $APP_LONG_NAME daemon is not currently installed."
                    exit 1
                fi
            fi
        elif [ "$DIST_OS" = "hpux" ] ; then
            echo "Detected HP-UX:"
            if [ -f /sbin/init.d/$APP_NAME ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                for i in /sbin/rc3.d/K20$APP_NAME /sbin/rc3.d/S20$APP_NAME /sbin/init.d/$APP_NAME
                do
                    rm -f $i
                done
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        elif [ "$DIST_OS" = "aix" ] ; then
            echo "Detected AIX:"
            if [ -f /etc/rc.d/init.d/$APP_NAME ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                for i in /etc/rc.d/rc2.d/S20$APP_NAME /etc/rc.d/rc2.d/K20$APP_NAME /etc/rc.d/init.d/$APP_NAME
                do
                    rm -f $i
                done
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        elif [ "$DIST_OS" = "freebsd" ] ; then
            echo "Detected FreeBSD:"
            if [ -f /etc/rc.d/$APP_NAME ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                for i in /etc/rc.d/$APP_NAME
                do
                    rm -f $i
                done
                sed -i .bak "/${APP_NAME}_enable=\"YES\"/d" /etc/rc.conf
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        elif [ "$DIST_OS" = "macosx" ] ; then
            echo "Detected Mac OSX:"
            if [ -f "/Library/LaunchDaemons/${APP_PLIST}" ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                # Make sure the plist is installed
                LOADED_PLIST=`launchctl list | grep ${APP_PLIST_BASE}`
                if [ "X${LOADED_PLIST}" != "X" ] ; then
                    launchctl unload /Library/LaunchDaemons/${APP_PLIST}
                fi
                rm -f /Library/LaunchDaemons/${APP_PLIST}
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        elif [ "$DIST_OS" = "zos" ] ; then
            echo "Detected z/OS:"
            if [ -f /etc/rc.bak ] ; then
                echo " Removing $APP_LONG_NAME daemon..."
                cp /etc/rc /etc/rc.bak
                sed  "s/_BPX_JOBNAME=\'APP_NAME\'.*//g" /etc/rc.bak > /etc/rc
                rm /etc/rc.bak
            else
                echo " The $APP_LONG_NAME daemon is not currently installed."
                exit 1
            fi
        else
            echo "Remove not currently supported for $DIST_OS"
            exit 1
        fi
    fi
}

case "$1" in
start)
  csvn_start $1
  echo ;;
graceful)
  graceful
  echo ;;
stop|graceful-stop)
  csvn_stop $1
  echo ;;
status)
  status
  echo ;;
restart)
  csvn_restart
  echo ;;
install)
  installdaemon
  echo ;;
remove)
  removedaemon
  echo ;;

*)
  echo $"Usage: $0 {start|graceful|stop|graceful-stop|status|restart|install|remove}"
  exit 1
esac

exit $RETVAL
